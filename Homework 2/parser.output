Terminals unused in grammar

    SPEC
    KEYWORD


Grammar

    0 $accept: program $end

    1 program: declList

    2 declList: declList decl
    3         | decl

    4 decl: varDecl
    5     | funDecl

    6 varDecl: typeSpec varDeclList SEMICOLON

    7 scopedVarDecl: STATIC typeSpec varDeclList SEMICOLON
    8              | typeSpec varDeclList SEMICOLON

    9 varDeclList: varDeclList COMMA varDeclInit
   10            | varDeclInit

   11 varDeclInit: varDeclId
   12            | varDeclId COLON simpleExp

   13 varDeclId: ID
   14          | ID LBRACKET NUMCONST RBRACKET

   15 typeSpec: BOOL
   16         | CHAR
   17         | INT

   18 funDecl: typeSpec ID LPAREN parms RPAREN compoundStmt
   19        | ID LPAREN parms RPAREN compoundStmt

   20 parms: parmList
   21      | %empty

   22 parmList: parmList SEMICOLON parmTypeList
   23         | parmTypeList

   24 parmTypeList: typeSpec parmIdList

   25 parmIdList: parmIdList COMMA parmId
   26           | parmId

   27 parmId: ID
   28       | ID LBRACKET RBRACKET

   29 stmt: matchedif
   30     | unmatchedif

   31 expStmt: exp SEMICOLON
   32        | SEMICOLON

   33 compoundStmt: START localDecls stmtList STOP

   34 localDecls: localDecls scopedVarDecl
   35           | %empty

   36 stmtList: stmtList stmt
   37         | %empty

   38 matchedif: endStmt
   39          | IF simpleExp THEN matchedif ELSE matchedif
   40          | WHILE simpleExp DO matchedif
   41          | FOR ID ASGN iterRange DO matchedif

   42 unmatchedif: IF simpleExp THEN matchedif ELSE unmatchedif
   43            | WHILE simpleExp DO unmatchedif
   44            | FOR ID ASGN iterRange DO unmatchedif
   45            | IF simpleExp THEN stmt

   46 endStmt: expStmt
   47        | compoundStmt
   48        | returnStmt
   49        | breakStmt

   50 iterRange: simpleExp TO simpleExp
   51          | simpleExp TO simpleExp BY simpleExp

   52 returnStmt: RETURN SEMICOLON
   53           | RETURN exp SEMICOLON

   54 breakStmt: BREAK SEMICOLON

   55 exp: mutable assignop exp
   56    | mutable INC
   57    | mutable DEC
   58    | simpleExp

   59 assignop: ASGN
   60         | ADDASGN
   61         | MINUSASGN
   62         | MULTASGN
   63         | DIVASGN

   64 simpleExp: simpleExp OR andExp
   65          | andExp

   66 andExp: andExp AND unaryRelExp
   67       | unaryRelExp

   68 unaryRelExp: NOT unaryRelExp
   69            | relExp

   70 relExp: sumExp relop sumExp
   71       | sumExp

   72 relop: LESSTHAN
   73      | LEQ
   74      | GREATERTHAN
   75      | GEQ
   76      | EQUALS
   77      | NEQ

   78 sumExp: sumExp sumop mulExp
   79       | mulExp

   80 sumop: PLUS
   81      | MINUS

   82 mulExp: mulExp mulop unaryExp
   83       | unaryExp

   84 mulop: MULT
   85      | DIVIDE
   86      | PERCENT

   87 unaryExp: unaryop unaryExp
   88         | factor

   89 unaryop: MINUS
   90        | MULT
   91        | QMARK

   92 factor: mutable
   93       | immutable

   94 mutable: ID
   95        | ID LBRACKET exp RBRACKET

   96 immutable: LPAREN exp RPAREN
   97          | call
   98          | constant

   99 call: ID LPAREN args RPAREN

  100 args: argList
  101     | %empty

  102 argList: argList COMMA exp
  103        | exp

  104 constant: NUMCONST
  105         | CHARCONST
  106         | STRINGCONST
  107         | BOOLCONST


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <tokenData> (258) 13 14 18 19 27 28 41 44 94 95 99
    NUMCONST <tokenData> (259) 14 104
    CHARCONST <tokenData> (260) 105
    STRINGCONST <tokenData> (261) 106
    BOOLCONST <tokenData> (262) 107
    SPEC <tokenData> (263)
    KEYWORD <tokenData> (264)
    INC <tokenData> (265) 56
    DEC <tokenData> (266) 57
    NEQ <tokenData> (267) 77
    LEQ <tokenData> (268) 73
    GEQ <tokenData> (269) 75
    ASGN <tokenData> (270) 41 44 59
    ADDASGN <tokenData> (271) 60
    MINUSASGN <tokenData> (272) 61
    MULTASGN <tokenData> (273) 62
    DIVASGN <tokenData> (274) 63
    PLUS <tokenData> (275) 80
    MINUS <tokenData> (276) 81 89
    DIVIDE <tokenData> (277) 85
    MULT <tokenData> (278) 84 90
    EQUALS <tokenData> (279) 76
    PERCENT <tokenData> (280) 86
    COLON <tokenData> (281) 12
    SEMICOLON <tokenData> (282) 6 7 8 22 31 32 52 53 54
    COMMA <tokenData> (283) 9 25 102
    QMARK <tokenData> (284) 91
    IF <tokenData> (285) 39 42 45
    THEN <tokenData> (286) 39 42 45
    ELSE <tokenData> (287) 39 42
    FOR <tokenData> (288) 41 44
    BREAK <tokenData> (289) 54
    RETURN <tokenData> (290) 52 53
    START <tokenData> (291) 33
    STOP <tokenData> (292) 33
    WHILE <tokenData> (293) 40 43
    TO <tokenData> (294) 50 51
    DO <tokenData> (295) 40 41 43 44
    BY <tokenData> (296) 51
    NOT <tokenData> (297) 68
    STATIC <tokenData> (298) 7
    BOOL <tokenData> (299) 15
    CHAR <tokenData> (300) 16
    INT <tokenData> (301) 17
    LBRACKET <tokenData> (302) 14 28 95
    RBRACKET <tokenData> (303) 14 28 95
    LPAREN <tokenData> (304) 18 19 96 99
    RPAREN <tokenData> (305) 18 19 96 99
    OR <tokenData> (306) 64
    AND <tokenData> (307) 66
    LESSTHAN <tokenData> (308) 72
    GREATERTHAN <tokenData> (309) 74


Nonterminals, with rules where they appear

    $accept (55)
        on left: 0
    program (56)
        on left: 1
        on right: 0
    declList <tree> (57)
        on left: 2 3
        on right: 1 2
    decl <tree> (58)
        on left: 4 5
        on right: 2 3
    varDecl <tree> (59)
        on left: 6
        on right: 4
    scopedVarDecl <tree> (60)
        on left: 7 8
        on right: 34
    varDeclList <tree> (61)
        on left: 9 10
        on right: 6 7 8 9
    varDeclInit <tree> (62)
        on left: 11 12
        on right: 9 10
    varDeclId <tree> (63)
        on left: 13 14
        on right: 11 12
    typeSpec <type> (64)
        on left: 15 16 17
        on right: 6 7 8 18 24
    funDecl <tree> (65)
        on left: 18 19
        on right: 5
    parms <tree> (66)
        on left: 20 21
        on right: 18 19
    parmList <tree> (67)
        on left: 22 23
        on right: 20 22
    parmTypeList <tree> (68)
        on left: 24
        on right: 22 23
    parmIdList <tree> (69)
        on left: 25 26
        on right: 24 25
    parmId <tree> (70)
        on left: 27 28
        on right: 25 26
    stmt <tree> (71)
        on left: 29 30
        on right: 36 45
    expStmt <tree> (72)
        on left: 31 32
        on right: 46
    compoundStmt <tree> (73)
        on left: 33
        on right: 18 19 47
    localDecls <tree> (74)
        on left: 34 35
        on right: 33 34
    stmtList <tree> (75)
        on left: 36 37
        on right: 33 36
    matchedif <tree> (76)
        on left: 38 39 40 41
        on right: 29 39 40 41 42
    unmatchedif <tree> (77)
        on left: 42 43 44 45
        on right: 30 42 43 44
    endStmt <tree> (78)
        on left: 46 47 48 49
        on right: 38
    iterRange <tree> (79)
        on left: 50 51
        on right: 41 44
    returnStmt <tree> (80)
        on left: 52 53
        on right: 48
    breakStmt <tree> (81)
        on left: 54
        on right: 49
    exp <tree> (82)
        on left: 55 56 57 58
        on right: 31 53 55 95 96 102 103
    assignop <tree> (83)
        on left: 59 60 61 62 63
        on right: 55
    simpleExp <tree> (84)
        on left: 64 65
        on right: 12 39 40 42 43 45 50 51 58 64
    andExp <tree> (85)
        on left: 66 67
        on right: 64 65 66
    unaryRelExp <tree> (86)
        on left: 68 69
        on right: 66 67 68
    relExp <tree> (87)
        on left: 70 71
        on right: 69
    relop <tree> (88)
        on left: 72 73 74 75 76 77
        on right: 70
    sumExp <tree> (89)
        on left: 78 79
        on right: 70 71 78
    sumop <tree> (90)
        on left: 80 81
        on right: 78
    mulExp <tree> (91)
        on left: 82 83
        on right: 78 79 82
    mulop <tree> (92)
        on left: 84 85 86
        on right: 82
    unaryExp <tree> (93)
        on left: 87 88
        on right: 82 83 87
    unaryop <tree> (94)
        on left: 89 90 91
        on right: 87
    factor <tree> (95)
        on left: 92 93
        on right: 88
    mutable <tree> (96)
        on left: 94 95
        on right: 55 56 57 92
    immutable <tree> (97)
        on left: 96 97 98
        on right: 93
    call <tree> (98)
        on left: 99
        on right: 97
    args <tree> (99)
        on left: 100 101
        on right: 99
    argList <tree> (100)
        on left: 102 103
        on right: 100 102
    constant <tree> (101)
        on left: 104 105 106 107
        on right: 98


State 0

    0 $accept: • program $end

    ID    shift, and go to state 1
    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    program   go to state 5
    declList  go to state 6
    decl      go to state 7
    varDecl   go to state 8
    typeSpec  go to state 9
    funDecl   go to state 10


State 1

   19 funDecl: ID • LPAREN parms RPAREN compoundStmt

    LPAREN  shift, and go to state 11


State 2

   15 typeSpec: BOOL •

    $default  reduce using rule 15 (typeSpec)


State 3

   16 typeSpec: CHAR •

    $default  reduce using rule 16 (typeSpec)


State 4

   17 typeSpec: INT •

    $default  reduce using rule 17 (typeSpec)


State 5

    0 $accept: program • $end

    $end  shift, and go to state 12


State 6

    1 program: declList •
    2 declList: declList • decl

    ID    shift, and go to state 1
    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    $default  reduce using rule 1 (program)

    decl      go to state 13
    varDecl   go to state 8
    typeSpec  go to state 9
    funDecl   go to state 10


State 7

    3 declList: decl •

    $default  reduce using rule 3 (declList)


State 8

    4 decl: varDecl •

    $default  reduce using rule 4 (decl)


State 9

    6 varDecl: typeSpec • varDeclList SEMICOLON
   18 funDecl: typeSpec • ID LPAREN parms RPAREN compoundStmt

    ID  shift, and go to state 14

    varDeclList  go to state 15
    varDeclInit  go to state 16
    varDeclId    go to state 17


State 10

    5 decl: funDecl •

    $default  reduce using rule 5 (decl)


State 11

   19 funDecl: ID LPAREN • parms RPAREN compoundStmt

    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    $default  reduce using rule 21 (parms)

    typeSpec      go to state 18
    parms         go to state 19
    parmList      go to state 20
    parmTypeList  go to state 21


State 12

    0 $accept: program $end •

    $default  accept


State 13

    2 declList: declList decl •

    $default  reduce using rule 2 (declList)


State 14

   13 varDeclId: ID •
   14          | ID • LBRACKET NUMCONST RBRACKET
   18 funDecl: typeSpec ID • LPAREN parms RPAREN compoundStmt

    LBRACKET  shift, and go to state 22
    LPAREN    shift, and go to state 23

    $default  reduce using rule 13 (varDeclId)


State 15

    6 varDecl: typeSpec varDeclList • SEMICOLON
    9 varDeclList: varDeclList • COMMA varDeclInit

    SEMICOLON  shift, and go to state 24
    COMMA      shift, and go to state 25


State 16

   10 varDeclList: varDeclInit •

    $default  reduce using rule 10 (varDeclList)


State 17

   11 varDeclInit: varDeclId •
   12            | varDeclId • COLON simpleExp

    COLON  shift, and go to state 26

    $default  reduce using rule 11 (varDeclInit)


State 18

   24 parmTypeList: typeSpec • parmIdList

    ID  shift, and go to state 27

    parmIdList  go to state 28
    parmId      go to state 29


State 19

   19 funDecl: ID LPAREN parms • RPAREN compoundStmt

    RPAREN  shift, and go to state 30


State 20

   20 parms: parmList •
   22 parmList: parmList • SEMICOLON parmTypeList

    SEMICOLON  shift, and go to state 31

    $default  reduce using rule 20 (parms)


State 21

   23 parmList: parmTypeList •

    $default  reduce using rule 23 (parmList)


State 22

   14 varDeclId: ID LBRACKET • NUMCONST RBRACKET

    NUMCONST  shift, and go to state 32


State 23

   18 funDecl: typeSpec ID LPAREN • parms RPAREN compoundStmt

    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    $default  reduce using rule 21 (parms)

    typeSpec      go to state 18
    parms         go to state 33
    parmList      go to state 20
    parmTypeList  go to state 21


State 24

    6 varDecl: typeSpec varDeclList SEMICOLON •

    $default  reduce using rule 6 (varDecl)


State 25

    9 varDeclList: varDeclList COMMA • varDeclInit

    ID  shift, and go to state 34

    varDeclInit  go to state 35
    varDeclId    go to state 17


State 26

   12 varDeclInit: varDeclId COLON • simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    simpleExp    go to state 46
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 27

   27 parmId: ID •
   28       | ID • LBRACKET RBRACKET

    LBRACKET  shift, and go to state 59

    $default  reduce using rule 27 (parmId)


State 28

   24 parmTypeList: typeSpec parmIdList •
   25 parmIdList: parmIdList • COMMA parmId

    COMMA  shift, and go to state 60

    $default  reduce using rule 24 (parmTypeList)


State 29

   26 parmIdList: parmId •

    $default  reduce using rule 26 (parmIdList)


State 30

   19 funDecl: ID LPAREN parms RPAREN • compoundStmt

    START  shift, and go to state 61

    compoundStmt  go to state 62


State 31

   22 parmList: parmList SEMICOLON • parmTypeList

    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    typeSpec      go to state 18
    parmTypeList  go to state 63


State 32

   14 varDeclId: ID LBRACKET NUMCONST • RBRACKET

    RBRACKET  shift, and go to state 64


State 33

   18 funDecl: typeSpec ID LPAREN parms • RPAREN compoundStmt

    RPAREN  shift, and go to state 65


State 34

   13 varDeclId: ID •
   14          | ID • LBRACKET NUMCONST RBRACKET

    LBRACKET  shift, and go to state 22

    $default  reduce using rule 13 (varDeclId)


State 35

    9 varDeclList: varDeclList COMMA varDeclInit •

    $default  reduce using rule 9 (varDeclList)


State 36

   94 mutable: ID •
   95        | ID • LBRACKET exp RBRACKET
   99 call: ID • LPAREN args RPAREN

    LBRACKET  shift, and go to state 66
    LPAREN    shift, and go to state 67

    $default  reduce using rule 94 (mutable)


State 37

  104 constant: NUMCONST •

    $default  reduce using rule 104 (constant)


State 38

  105 constant: CHARCONST •

    $default  reduce using rule 105 (constant)


State 39

  106 constant: STRINGCONST •

    $default  reduce using rule 106 (constant)


State 40

  107 constant: BOOLCONST •

    $default  reduce using rule 107 (constant)


State 41

   89 unaryop: MINUS •

    $default  reduce using rule 89 (unaryop)


State 42

   90 unaryop: MULT •

    $default  reduce using rule 90 (unaryop)


State 43

   91 unaryop: QMARK •

    $default  reduce using rule 91 (unaryop)


State 44

   68 unaryRelExp: NOT • unaryRelExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    unaryRelExp  go to state 68
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 45

   96 immutable: LPAREN • exp RPAREN

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    exp          go to state 69
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 46

   12 varDeclInit: varDeclId COLON simpleExp •
   64 simpleExp: simpleExp • OR andExp

    OR  shift, and go to state 72

    $default  reduce using rule 12 (varDeclInit)


State 47

   65 simpleExp: andExp •
   66 andExp: andExp • AND unaryRelExp

    AND  shift, and go to state 73

    $default  reduce using rule 65 (simpleExp)


State 48

   67 andExp: unaryRelExp •

    $default  reduce using rule 67 (andExp)


State 49

   69 unaryRelExp: relExp •

    $default  reduce using rule 69 (unaryRelExp)


State 50

   70 relExp: sumExp • relop sumExp
   71       | sumExp •
   78 sumExp: sumExp • sumop mulExp

    NEQ          shift, and go to state 74
    LEQ          shift, and go to state 75
    GEQ          shift, and go to state 76
    PLUS         shift, and go to state 77
    MINUS        shift, and go to state 78
    EQUALS       shift, and go to state 79
    LESSTHAN     shift, and go to state 80
    GREATERTHAN  shift, and go to state 81

    $default  reduce using rule 71 (relExp)

    relop  go to state 82
    sumop  go to state 83


State 51

   79 sumExp: mulExp •
   82 mulExp: mulExp • mulop unaryExp

    DIVIDE   shift, and go to state 84
    MULT     shift, and go to state 85
    PERCENT  shift, and go to state 86

    $default  reduce using rule 79 (sumExp)

    mulop  go to state 87


State 52

   83 mulExp: unaryExp •

    $default  reduce using rule 83 (mulExp)


State 53

   87 unaryExp: unaryop • unaryExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 45

    unaryExp   go to state 88
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 54

   88 unaryExp: factor •

    $default  reduce using rule 88 (unaryExp)


State 55

   92 factor: mutable •

    $default  reduce using rule 92 (factor)


State 56

   93 factor: immutable •

    $default  reduce using rule 93 (factor)


State 57

   97 immutable: call •

    $default  reduce using rule 97 (immutable)


State 58

   98 immutable: constant •

    $default  reduce using rule 98 (immutable)


State 59

   28 parmId: ID LBRACKET • RBRACKET

    RBRACKET  shift, and go to state 89


State 60

   25 parmIdList: parmIdList COMMA • parmId

    ID  shift, and go to state 27

    parmId  go to state 90


State 61

   33 compoundStmt: START • localDecls stmtList STOP

    $default  reduce using rule 35 (localDecls)

    localDecls  go to state 91


State 62

   19 funDecl: ID LPAREN parms RPAREN compoundStmt •

    $default  reduce using rule 19 (funDecl)


State 63

   22 parmList: parmList SEMICOLON parmTypeList •

    $default  reduce using rule 22 (parmList)


State 64

   14 varDeclId: ID LBRACKET NUMCONST RBRACKET •

    $default  reduce using rule 14 (varDeclId)


State 65

   18 funDecl: typeSpec ID LPAREN parms RPAREN • compoundStmt

    START  shift, and go to state 61

    compoundStmt  go to state 92


State 66

   95 mutable: ID LBRACKET • exp RBRACKET

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    exp          go to state 93
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 67

   99 call: ID LPAREN • args RPAREN

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    $default  reduce using rule 101 (args)

    exp          go to state 94
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    args         go to state 95
    argList      go to state 96
    constant     go to state 58


State 68

   68 unaryRelExp: NOT unaryRelExp •

    $default  reduce using rule 68 (unaryRelExp)


State 69

   96 immutable: LPAREN exp • RPAREN

    RPAREN  shift, and go to state 97


State 70

   58 exp: simpleExp •
   64 simpleExp: simpleExp • OR andExp

    OR  shift, and go to state 72

    $default  reduce using rule 58 (exp)


State 71

   55 exp: mutable • assignop exp
   56    | mutable • INC
   57    | mutable • DEC
   92 factor: mutable •

    INC        shift, and go to state 98
    DEC        shift, and go to state 99
    ASGN       shift, and go to state 100
    ADDASGN    shift, and go to state 101
    MINUSASGN  shift, and go to state 102
    MULTASGN   shift, and go to state 103
    DIVASGN    shift, and go to state 104

    $default  reduce using rule 92 (factor)

    assignop  go to state 105


State 72

   64 simpleExp: simpleExp OR • andExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    andExp       go to state 106
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 73

   66 andExp: andExp AND • unaryRelExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    unaryRelExp  go to state 107
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 74

   77 relop: NEQ •

    $default  reduce using rule 77 (relop)


State 75

   73 relop: LEQ •

    $default  reduce using rule 73 (relop)


State 76

   75 relop: GEQ •

    $default  reduce using rule 75 (relop)


State 77

   80 sumop: PLUS •

    $default  reduce using rule 80 (sumop)


State 78

   81 sumop: MINUS •

    $default  reduce using rule 81 (sumop)


State 79

   76 relop: EQUALS •

    $default  reduce using rule 76 (relop)


State 80

   72 relop: LESSTHAN •

    $default  reduce using rule 72 (relop)


State 81

   74 relop: GREATERTHAN •

    $default  reduce using rule 74 (relop)


State 82

   70 relExp: sumExp relop • sumExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 45

    sumExp     go to state 108
    mulExp     go to state 51
    unaryExp   go to state 52
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 83

   78 sumExp: sumExp sumop • mulExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 45

    mulExp     go to state 109
    unaryExp   go to state 52
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 84

   85 mulop: DIVIDE •

    $default  reduce using rule 85 (mulop)


State 85

   84 mulop: MULT •

    $default  reduce using rule 84 (mulop)


State 86

   86 mulop: PERCENT •

    $default  reduce using rule 86 (mulop)


State 87

   82 mulExp: mulExp mulop • unaryExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    LPAREN       shift, and go to state 45

    unaryExp   go to state 110
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 88

   87 unaryExp: unaryop unaryExp •

    $default  reduce using rule 87 (unaryExp)


State 89

   28 parmId: ID LBRACKET RBRACKET •

    $default  reduce using rule 28 (parmId)


State 90

   25 parmIdList: parmIdList COMMA parmId •

    $default  reduce using rule 25 (parmIdList)


State 91

   33 compoundStmt: START localDecls • stmtList STOP
   34 localDecls: localDecls • scopedVarDecl

    STATIC  shift, and go to state 111
    BOOL    shift, and go to state 2
    CHAR    shift, and go to state 3
    INT     shift, and go to state 4

    $default  reduce using rule 37 (stmtList)

    scopedVarDecl  go to state 112
    typeSpec       go to state 113
    stmtList       go to state 114


State 92

   18 funDecl: typeSpec ID LPAREN parms RPAREN compoundStmt •

    $default  reduce using rule 18 (funDecl)


State 93

   95 mutable: ID LBRACKET exp • RBRACKET

    RBRACKET  shift, and go to state 115


State 94

  103 argList: exp •

    $default  reduce using rule 103 (argList)


State 95

   99 call: ID LPAREN args • RPAREN

    RPAREN  shift, and go to state 116


State 96

  100 args: argList •
  102 argList: argList • COMMA exp

    COMMA  shift, and go to state 117

    $default  reduce using rule 100 (args)


State 97

   96 immutable: LPAREN exp RPAREN •

    $default  reduce using rule 96 (immutable)


State 98

   56 exp: mutable INC •

    $default  reduce using rule 56 (exp)


State 99

   57 exp: mutable DEC •

    $default  reduce using rule 57 (exp)


State 100

   59 assignop: ASGN •

    $default  reduce using rule 59 (assignop)


State 101

   60 assignop: ADDASGN •

    $default  reduce using rule 60 (assignop)


State 102

   61 assignop: MINUSASGN •

    $default  reduce using rule 61 (assignop)


State 103

   62 assignop: MULTASGN •

    $default  reduce using rule 62 (assignop)


State 104

   63 assignop: DIVASGN •

    $default  reduce using rule 63 (assignop)


State 105

   55 exp: mutable assignop • exp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    exp          go to state 118
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 106

   64 simpleExp: simpleExp OR andExp •
   66 andExp: andExp • AND unaryRelExp

    AND  shift, and go to state 73

    $default  reduce using rule 64 (simpleExp)


State 107

   66 andExp: andExp AND unaryRelExp •

    $default  reduce using rule 66 (andExp)


State 108

   70 relExp: sumExp relop sumExp •
   78 sumExp: sumExp • sumop mulExp

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 70 (relExp)

    sumop  go to state 83


State 109

   78 sumExp: sumExp sumop mulExp •
   82 mulExp: mulExp • mulop unaryExp

    DIVIDE   shift, and go to state 84
    MULT     shift, and go to state 85
    PERCENT  shift, and go to state 86

    $default  reduce using rule 78 (sumExp)

    mulop  go to state 87


State 110

   82 mulExp: mulExp mulop unaryExp •

    $default  reduce using rule 82 (mulExp)


State 111

    7 scopedVarDecl: STATIC • typeSpec varDeclList SEMICOLON

    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    typeSpec  go to state 119


State 112

   34 localDecls: localDecls scopedVarDecl •

    $default  reduce using rule 34 (localDecls)


State 113

    8 scopedVarDecl: typeSpec • varDeclList SEMICOLON

    ID  shift, and go to state 34

    varDeclList  go to state 120
    varDeclInit  go to state 16
    varDeclId    go to state 17


State 114

   33 compoundStmt: START localDecls stmtList • STOP
   36 stmtList: stmtList • stmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    SEMICOLON    shift, and go to state 121
    QMARK        shift, and go to state 43
    IF           shift, and go to state 122
    FOR          shift, and go to state 123
    BREAK        shift, and go to state 124
    RETURN       shift, and go to state 125
    START        shift, and go to state 61
    STOP         shift, and go to state 126
    WHILE        shift, and go to state 127
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    stmt          go to state 128
    expStmt       go to state 129
    compoundStmt  go to state 130
    matchedif     go to state 131
    unmatchedif   go to state 132
    endStmt       go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 70
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryop       go to state 53
    factor        go to state 54
    mutable       go to state 71
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 115

   95 mutable: ID LBRACKET exp RBRACKET •

    $default  reduce using rule 95 (mutable)


State 116

   99 call: ID LPAREN args RPAREN •

    $default  reduce using rule 99 (call)


State 117

  102 argList: argList COMMA • exp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    exp          go to state 137
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 118

   55 exp: mutable assignop exp •

    $default  reduce using rule 55 (exp)


State 119

    7 scopedVarDecl: STATIC typeSpec • varDeclList SEMICOLON

    ID  shift, and go to state 34

    varDeclList  go to state 138
    varDeclInit  go to state 16
    varDeclId    go to state 17


State 120

    8 scopedVarDecl: typeSpec varDeclList • SEMICOLON
    9 varDeclList: varDeclList • COMMA varDeclInit

    SEMICOLON  shift, and go to state 139
    COMMA      shift, and go to state 25


State 121

   32 expStmt: SEMICOLON •

    $default  reduce using rule 32 (expStmt)


State 122

   39 matchedif: IF • simpleExp THEN matchedif ELSE matchedif
   42 unmatchedif: IF • simpleExp THEN matchedif ELSE unmatchedif
   45            | IF • simpleExp THEN stmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    simpleExp    go to state 140
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 123

   41 matchedif: FOR • ID ASGN iterRange DO matchedif
   44 unmatchedif: FOR • ID ASGN iterRange DO unmatchedif

    ID  shift, and go to state 141


State 124

   54 breakStmt: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 142


State 125

   52 returnStmt: RETURN • SEMICOLON
   53           | RETURN • exp SEMICOLON

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    SEMICOLON    shift, and go to state 143
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    exp          go to state 144
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 126

   33 compoundStmt: START localDecls stmtList STOP •

    $default  reduce using rule 33 (compoundStmt)


State 127

   40 matchedif: WHILE • simpleExp DO matchedif
   43 unmatchedif: WHILE • simpleExp DO unmatchedif

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    simpleExp    go to state 145
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 128

   36 stmtList: stmtList stmt •

    $default  reduce using rule 36 (stmtList)


State 129

   46 endStmt: expStmt •

    $default  reduce using rule 46 (endStmt)


State 130

   47 endStmt: compoundStmt •

    $default  reduce using rule 47 (endStmt)


State 131

   29 stmt: matchedif •

    $default  reduce using rule 29 (stmt)


State 132

   30 stmt: unmatchedif •

    $default  reduce using rule 30 (stmt)


State 133

   38 matchedif: endStmt •

    $default  reduce using rule 38 (matchedif)


State 134

   48 endStmt: returnStmt •

    $default  reduce using rule 48 (endStmt)


State 135

   49 endStmt: breakStmt •

    $default  reduce using rule 49 (endStmt)


State 136

   31 expStmt: exp • SEMICOLON

    SEMICOLON  shift, and go to state 146


State 137

  102 argList: argList COMMA exp •

    $default  reduce using rule 102 (argList)


State 138

    7 scopedVarDecl: STATIC typeSpec varDeclList • SEMICOLON
    9 varDeclList: varDeclList • COMMA varDeclInit

    SEMICOLON  shift, and go to state 147
    COMMA      shift, and go to state 25


State 139

    8 scopedVarDecl: typeSpec varDeclList SEMICOLON •

    $default  reduce using rule 8 (scopedVarDecl)


State 140

   39 matchedif: IF simpleExp • THEN matchedif ELSE matchedif
   42 unmatchedif: IF simpleExp • THEN matchedif ELSE unmatchedif
   45            | IF simpleExp • THEN stmt
   64 simpleExp: simpleExp • OR andExp

    THEN  shift, and go to state 148
    OR    shift, and go to state 72


State 141

   41 matchedif: FOR ID • ASGN iterRange DO matchedif
   44 unmatchedif: FOR ID • ASGN iterRange DO unmatchedif

    ASGN  shift, and go to state 149


State 142

   54 breakStmt: BREAK SEMICOLON •

    $default  reduce using rule 54 (breakStmt)


State 143

   52 returnStmt: RETURN SEMICOLON •

    $default  reduce using rule 52 (returnStmt)


State 144

   53 returnStmt: RETURN exp • SEMICOLON

    SEMICOLON  shift, and go to state 150


State 145

   40 matchedif: WHILE simpleExp • DO matchedif
   43 unmatchedif: WHILE simpleExp • DO unmatchedif
   64 simpleExp: simpleExp • OR andExp

    DO  shift, and go to state 151
    OR  shift, and go to state 72


State 146

   31 expStmt: exp SEMICOLON •

    $default  reduce using rule 31 (expStmt)


State 147

    7 scopedVarDecl: STATIC typeSpec varDeclList SEMICOLON •

    $default  reduce using rule 7 (scopedVarDecl)


State 148

   39 matchedif: IF simpleExp THEN • matchedif ELSE matchedif
   42 unmatchedif: IF simpleExp THEN • matchedif ELSE unmatchedif
   45            | IF simpleExp THEN • stmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    SEMICOLON    shift, and go to state 121
    QMARK        shift, and go to state 43
    IF           shift, and go to state 122
    FOR          shift, and go to state 123
    BREAK        shift, and go to state 124
    RETURN       shift, and go to state 125
    START        shift, and go to state 61
    WHILE        shift, and go to state 127
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    stmt          go to state 152
    expStmt       go to state 129
    compoundStmt  go to state 130
    matchedif     go to state 153
    unmatchedif   go to state 132
    endStmt       go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 70
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryop       go to state 53
    factor        go to state 54
    mutable       go to state 71
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 149

   41 matchedif: FOR ID ASGN • iterRange DO matchedif
   44 unmatchedif: FOR ID ASGN • iterRange DO unmatchedif

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    iterRange    go to state 154
    simpleExp    go to state 155
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 150

   53 returnStmt: RETURN exp SEMICOLON •

    $default  reduce using rule 53 (returnStmt)


State 151

   40 matchedif: WHILE simpleExp DO • matchedif
   43 unmatchedif: WHILE simpleExp DO • unmatchedif

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    SEMICOLON    shift, and go to state 121
    QMARK        shift, and go to state 43
    IF           shift, and go to state 122
    FOR          shift, and go to state 123
    BREAK        shift, and go to state 124
    RETURN       shift, and go to state 125
    START        shift, and go to state 61
    WHILE        shift, and go to state 127
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    expStmt       go to state 129
    compoundStmt  go to state 130
    matchedif     go to state 156
    unmatchedif   go to state 157
    endStmt       go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 70
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryop       go to state 53
    factor        go to state 54
    mutable       go to state 71
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 152

   45 unmatchedif: IF simpleExp THEN stmt •

    $default  reduce using rule 45 (unmatchedif)


State 153

   29 stmt: matchedif •
   39 matchedif: IF simpleExp THEN matchedif • ELSE matchedif
   42 unmatchedif: IF simpleExp THEN matchedif • ELSE unmatchedif

    ELSE  shift, and go to state 158

    $default  reduce using rule 29 (stmt)


State 154

   41 matchedif: FOR ID ASGN iterRange • DO matchedif
   44 unmatchedif: FOR ID ASGN iterRange • DO unmatchedif

    DO  shift, and go to state 159


State 155

   50 iterRange: simpleExp • TO simpleExp
   51          | simpleExp • TO simpleExp BY simpleExp
   64 simpleExp: simpleExp • OR andExp

    TO  shift, and go to state 160
    OR  shift, and go to state 72


State 156

   40 matchedif: WHILE simpleExp DO matchedif •

    $default  reduce using rule 40 (matchedif)


State 157

   43 unmatchedif: WHILE simpleExp DO unmatchedif •

    $default  reduce using rule 43 (unmatchedif)


State 158

   39 matchedif: IF simpleExp THEN matchedif ELSE • matchedif
   42 unmatchedif: IF simpleExp THEN matchedif ELSE • unmatchedif

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    SEMICOLON    shift, and go to state 121
    QMARK        shift, and go to state 43
    IF           shift, and go to state 122
    FOR          shift, and go to state 123
    BREAK        shift, and go to state 124
    RETURN       shift, and go to state 125
    START        shift, and go to state 61
    WHILE        shift, and go to state 127
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    expStmt       go to state 129
    compoundStmt  go to state 130
    matchedif     go to state 161
    unmatchedif   go to state 162
    endStmt       go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 70
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryop       go to state 53
    factor        go to state 54
    mutable       go to state 71
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 159

   41 matchedif: FOR ID ASGN iterRange DO • matchedif
   44 unmatchedif: FOR ID ASGN iterRange DO • unmatchedif

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    SEMICOLON    shift, and go to state 121
    QMARK        shift, and go to state 43
    IF           shift, and go to state 122
    FOR          shift, and go to state 123
    BREAK        shift, and go to state 124
    RETURN       shift, and go to state 125
    START        shift, and go to state 61
    WHILE        shift, and go to state 127
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    expStmt       go to state 129
    compoundStmt  go to state 130
    matchedif     go to state 163
    unmatchedif   go to state 164
    endStmt       go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 70
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryop       go to state 53
    factor        go to state 54
    mutable       go to state 71
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 160

   50 iterRange: simpleExp TO • simpleExp
   51          | simpleExp TO • simpleExp BY simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    simpleExp    go to state 165
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 161

   39 matchedif: IF simpleExp THEN matchedif ELSE matchedif •

    $default  reduce using rule 39 (matchedif)


State 162

   42 unmatchedif: IF simpleExp THEN matchedif ELSE unmatchedif •

    $default  reduce using rule 42 (unmatchedif)


State 163

   41 matchedif: FOR ID ASGN iterRange DO matchedif •

    $default  reduce using rule 41 (matchedif)


State 164

   44 unmatchedif: FOR ID ASGN iterRange DO unmatchedif •

    $default  reduce using rule 44 (unmatchedif)


State 165

   50 iterRange: simpleExp TO simpleExp •
   51          | simpleExp TO simpleExp • BY simpleExp
   64 simpleExp: simpleExp • OR andExp

    BY  shift, and go to state 166
    OR  shift, and go to state 72

    $default  reduce using rule 50 (iterRange)


State 166

   51 iterRange: simpleExp TO simpleExp BY • simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    MINUS        shift, and go to state 41
    MULT         shift, and go to state 42
    QMARK        shift, and go to state 43
    NOT          shift, and go to state 44
    LPAREN       shift, and go to state 45

    simpleExp    go to state 167
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 167

   51 iterRange: simpleExp TO simpleExp BY simpleExp •
   64 simpleExp: simpleExp • OR andExp

    OR  shift, and go to state 72

    $default  reduce using rule 51 (iterRange)
